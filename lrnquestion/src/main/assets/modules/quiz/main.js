var optionTexts=["A","B","C","D","E","F"];var lastMarker;var selectedAnswer;var options=[];var checked=!1;dotLearn.onLoad(function(dl){var user=dl.user.get();var quiz=dl.data;var div=document.createElement("div");div.innerHTML=latexToIm(quiz.prompt);document.getElementById("quiz-text").appendChild(div);var answers=document.getElementById("answers");var options=quiz.options;if(quiz.image){document.getElementById("quiz-image").src="loading.gif";var url="https://s3-eu-west-1.amazonaws.com/create-dotlearn/quiz-multiple/"+dl.id+"/"+quiz.image;var ext=quiz.image.split(".")[1];var mime="image/png";if(ext=="jpg")mime="image/jpeg";if(ext=="jpeg")mime="image/jpeg";var xhr=new XMLHttpRequest();xhr.open("GET",url,!0);xhr.responseType="arraybuffer";xhr.onload=function(oEvent){var blob=new Blob([oEvent.target.response],{type:mime});document.getElementById("quiz-image").src=URL.createObjectURL(blob)};xhr.send()}
quiz.options.forEach(function(option,index){var row=document.createElement('div');row.className='quiz-option';row.id="row_"+index;var optionText=document.createElement('div');optionText.innerHTML=optionTexts[index];optionText.className="optionText";optionText.id="optionText_"+index;if(typeof user!='undefined'){if(user.response==index){input.checked=!0}}
row.appendChild(optionText);var div=document.createElement("div");div.innerHTML=latexToIm(option.text);div.style.position="relative";div.style.left='40px';row.appendChild(div);row.onclick=function(){if(!checked){if(lastMarker){lastMarker.style.backgroundColor="#ffffff";lastMarker.style.color="#666666"}
dl.user.set({response:index});selectedAnswer=index;optionText.style.backgroundColor="#0084df";optionText.style.color="#ffffff";lastMarker=optionText}};answers.appendChild(row)})});function setVendor(element,property,value){element.style["webkit"+property]=value;element.style["moz"+property]=value;element.style["ms"+property]=value;element.style["o"+property]=value}
function latexToIm(html){var parser=new DOMParser();html=html.replaceAll('<\\latex>','</latex>')
var doc=parser.parseFromString(html,"text/html");if(!doc)return html;var latexes=doc.getElementsByTagName('latex');for(i=0;i<latexes.length;i++){var latex=latexes[i];console.log(latex.innerHTML);var image=document.createElement("img");image.title=latex.innerHTML;image.src="http://latex.codecogs.com/gif.latex?"+latex.innerHTML;image.height=35;var parent=latex.parentNode;parent.replaceChild(image,latex)}
return replaceThings(html)}
function replaceThings(string){var total=[];var toReturn="";var pass1=string.split("<latex>");pass1.forEach(function(part,i){var pass2=part.split("</latex>");if(pass2.length>1){total.push("<img src='http://latex.codecogs.com/gif.latex?"+pass2[0]+"'/>");total.push(pass2[1])}else{total.push(pass2[0])}});total.forEach(function(bit){toReturn=toReturn+bit});return toReturn}
dotLearn.onCheck(function(dl){var quiz=dl.data;quiz.options.forEach(function(option,index){var row=document.getElementById("row_"+index);if(index!==selectedAnswer){row.style.display="none"}else{var img=document.createElement("img");img.className="evaluate";var optionText=document.getElementById("optionText_"+index);if(selectedAnswer==quiz.answer){img.src="correct.png";row.style.backgroundColor="rgba(83, 215, 105, .3)"}else{img.src="incorrect.png";row.style.backgroundColor="rgba(255, 76, 76, .3)"}
optionText.parentNode.replaceChild(img,optionText);var explanation=document.getElementById("explanation");explanation.style.display="block";if(!quiz.explanation||0===quiz.explanation.length){var div=document.createElement("div");div.innerHTML="No explanation yet";explanation.appendChild(div)}
else{var div=document.createElement("div");div.innerHTML=latexToIm(quiz.explanation);explanation.appendChild(div)}}})});dotLearn.onNext(function(dl){});String.prototype.replaceAll=function(search,replacement){var target=this;return target.split(search).join(replacement)};(function(DOMParser){"use strict";var DOMParser_proto=DOMParser.prototype,real_parseFromString=DOMParser_proto.parseFromString;try{if((new DOMParser).parseFromString("","text/html")){return}}catch(ex){}
DOMParser_proto.parseFromString=function(markup,type){if(/^\s*text\/html\s*(?:;|$)/i.test(type)){var doc=document.implementation.createHTMLDocument(""),doc_elt=doc.documentElement,first_elt;doc_elt.innerHTML=markup;first_elt=doc_elt.firstElementChild;if(doc_elt.childElementCount===1&&first_elt.localName.toLowerCase()==="html"){doc.replaceChild(first_elt,doc_elt)}
return doc}else{return real_parseFromString.apply(this,arguments)}}}(DOMParser))