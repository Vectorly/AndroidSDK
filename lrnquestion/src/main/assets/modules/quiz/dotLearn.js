var dotLearnLib=(function(){var lib={};lib.host={};lib.interface={file:{request:function(name,callback){lib.interface.file.cache[name]=callback;lib.host.requestFile(name)},cache:{},receive:function(name,data){var blob;if(typeof data=="string"){blob=dataURLToBlob(data)}else{blob=data}
lib.interface.file.cache[name](blob)}},user:{current:{},receive:function(object){lib.interface.user.current=object}}};lib.api={load:function(item){lib.events.onLoad(createItemObject(item))},next:function(item){lib.events.onNext(createItemObject(item))},check:function(item){lib.events.onCheck(createItemObject(item))},finished:function(item){var data=lib.events.onFinished();lib.host.setData(item,data)},receiveFile:lib.interface.file.receive,receiveUser:lib.interface.user.receive};if(Android){lib.host=Android}else{iframeApi(lib.api).then(function(externalApi){lib.host=externalApi})}
lib.events={onLoad:function(){},onNext:function(){},onFinished:function(){},onCheck:function(){}};function createItemObject(item){if(typeof item=="string")item=JSON.parse(item);if(typeof item.data=="string"){item.data=JSON.parse(item.data)}
return{id:item.id,data:item.data,file:{get:lib.interface.file.request},user:{set:function(object){lib.interface.user.current=object;lib.host.setUser(JSON.stringify(object))},get:function(){return lib.interface.user.current}},blocker:{block:function(){lib.host.block()},unblock:function(){lib.host.unblock()}},lang:"en"}}
return lib})();var dotLearn={api:dotLearnLib.api,onLoad:function(func){dotLearnLib.events.onLoad=func},onNext:function(func){dotLearnLib.events.onNext=func},onCheck:function(func){dotLearnLib.events.onCheck=func},onFinished:function(func){dotLearnLib.events.onFinished=func}};function dataURLToBlob(dataURL){var BASE64_MARKER=';base64,';if(dataURL.indexOf(BASE64_MARKER)==-1){var parts=dataURL.split(',');var contentType=parts[0].split(':')[1];var raw=decodeURIComponent(parts[1]);return new Blob([raw],{type:contentType})}
var parts=dataURL.split(BASE64_MARKER);var contentType=parts[0].split(':')[1];var raw=window.atob(parts[1]);var rawLength=raw.length;var uInt8Array=new Uint8Array(rawLength);for(var i=0;i<rawLength;++i){uInt8Array[i]=raw.charCodeAt(i)}
return new Blob([uInt8Array],{type:contentType})}